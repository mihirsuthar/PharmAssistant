@model PharmAssistant.Models.ViewModels.PurchaseOrderViewModel

@{
	ViewBag.Title = "NewPurchaseOrder";
	Layout = "~/Views/Shared/_MasterLayout.cshtml";
}

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>

<script type="text/javascript">
	function AjaxCall(url, data, type) {
		return $.ajax({
			url: url,
			type: type ? type : 'GET',
			data: data,
			contentType: 'application/json'
		});
	}

	function onSuccess() {
		$("#categoryId").prop("selectedIndex", 0);
		$("#medicineId").prop("selectedIndex", 0);
		$("#quantity").val('');
	}

	$(function () {

		
		

		$("#categoryId").prop("selectedIndex", 0);
		$("#medicineId").prop("selectedIndex", 0);
		$("#quantity").val('');

		//$('#supplierId').on('change', function () {
		//	var supplierId = $('#supplierId').val();

		//	if (supplierId != '') {
		//		//alert('Category: ' + categoryId);
		//		var data = { SupplierId: supplierId };

		//		AjaxCall('/PurchaseOrders/GetMedicineCategories', JSON.stringify(data), 'POST')
		//			.done(function (response) {

		//				//alert("Medicines Received...");

		//				if (response.length > 0) {
		//					$('#categoryId').html('');
		//					var options = '';
		//					options += '<option value="Select">Select Medicine Category</option>';

		//					for (var i = 0; i < response.length; i++) {
		//						options += '<option value = "' + response[i]['CategoryId'] + '">' + response[i]['MedicineCategotyName'] + '</option>';
		//					}

		//					$('#categoryId').append(options);
		//				}
		//				else {
		//					$('#categoryId').html('');
		//					var options = '';
		//					options += '<option value="Select">Select Medicine Category</option>';

		//					$('#categoryId').append(options);
		//				}
		//			})
		//			.fail(function (error) {
		//				alert('Error Receiving Medicine Categories: ' + error.StatusText);
		//			});
		//	}
		//});

		$('#categoryId').on('change', function () {
			var categoryId = $('#categoryId').val();

			if (categoryId != '') {
				//alert('Category: ' + categoryId);
				var data = { CategoryId: categoryId };

				AjaxCall('/PurchaseOrders/GetMedicines', JSON.stringify(data), 'POST')
					.done(function (response) {

						//alert("Medicines Received...");

						if (response.length > 0) {
							$('#medicineId').html('');
							var options = '';
							options += '<option value="Select">Select Medicine</option>';

							for (var i = 0; i < response.length; i++) {
								options += '<option value = "' + response[i]['MedicineId'] + '">' + response[i]['Name'] + '</option>';
							}

							$('#medicineId').append(options);
						}
						else {
							$('#medicineId').html('');
							var options = '';
							options += '<option value="Select">Select Medicine</option>';

							$('#medicineId').append(options);
						}
					})
					.fail(function (error) {
						alert('Error Receiving Countries: ' + error.StatusText);
					});
			}
		});

		$('#discount').on('keyup', function (e) {
			var orderTotal = parseFloat($('#orderTotal').text());
			var discount = parseFloat($('#discount').val());
			if ($('#discount').val() != '') {
				if ((orderTotal - discount) <= 0) {
					alert('Discount can not be greater than Grand Total.');
					$('#discount').val('');
					$('#grandTotal').val('');
				}
				else {
					$('#grandTotal').val(orderTotal - discount);
				}
			}
			else {
				$('#grandTotal').val('');
			}

			
		});

		$('#discount').on('keypress', function (e) {

			if (e.metaKey || e.which <= 0 || /[0-9]/.test(String.fromCharCode(e.which)) || e.which == '8' || e.which == '46') {


				//if ($('#contactno').val().length > 11) {
				//	$('#contactnoErrorMsg').html('Contact number must have maximum 12 digits.');
				//	return false;
				//}
				//else {
				//	$('#contactnoErrorMsg').html('');
				//	return true;
				//}

				//$('#contactnoErrorMsg').html('');
				return true;
			}
			else {
				//$('#contactnoErrorMsg').html('Only numbers are allowed for contact number.');
				return false;
			}
		})
	});

</script>


<div class="row">
	<div class="panel">
		<div class="panel-heading">
			<h3>Purchase Order</h3>
		</div>
		<div class="panel-body">

			@using (Ajax.BeginForm("AddMedicineToOrder", "PurchaseOrders", new AjaxOptions
			{
				HttpMethod = "POST",
				UpdateTargetId = "medicineList",
				InsertionMode = InsertionMode.Replace,
				OnSuccess = "onSuccess"
			}))
			{
				<div class="row">
					<div class="col-md-4">
						Category:<br />
						@Html.DropDownList("CategoryId", ViewBag.MedicineCategories as SelectList, "Select Category", new { @class = "form-control", id = "categoryId" })<br />

						Medicine:<br />
						<select id="medicineId" name="MedicineId" class="form-control">
							<option>Select Medicine</option>
						</select><br />

						Quantity:<br />
						@Html.TextBox("Quantity", "", new { @class = "form-control", id = "quantity", placeholder = "Enter Quantity" })<br />
						<input type="submit" value="Add to List" class="btn btn-warning" />
					</div>
					<div class="col-md-8">
						<div class="panel panel-primary">
							<div class="panel-heading" style="height: 40px; padding: 1px;">
								<h4 class="text-center">Medicine List</h4>
							</div>
							<div class="panel-body" id="medicineList">
								@{ Html.RenderPartial("_PurchaseOrderItems", Model); }
							</div>
						</div>
					</div>
				</div>
			}

			<br />

			@*<div class="row">

					<div class="col-md-4">
						Suplier: @Html.DropDownList("SupplierId", ViewBag.Suppliers as SelectList, "Select Supplier", new { @class = "form-control", id = "supplierId" })
					</div>
					<div class="col-md-4">
						Code: @Html.TextBox("OrderCode", "", new { @class = "form-control", id = "orderId", placeholder = "Enter Order Code" })
					</div>
					<div class="col-md-4">
						Order Date: <input type="date" name="OrderDate" id="orderDate" class="form-control" />
					</div>

				</div>
				<br />*@


			<div class="row">

				@using (Html.BeginForm("SavePurchaseOrder", "PurchaseOrders", FormMethod.Post))
				{

					@Html.Hidden("PurchaseOrder.PurchaseOrderId", Session["PurchaseOrderId"])

					<div class="col-md-4">
						Suplier: <br />
						@Html.DropDownListFor(m => m.PurchaseOrder.SupplierId, ViewBag.Suppliers as SelectList, "Select Supplier", new { @class = "form-control", id = "supplierId" })<br />

						Code: <br />
						@Html.TextBoxFor(m => m.PurchaseOrder.PurchaseOrderCode, "", new { @class = "form-control", id = "orderId", placeholder = "Enter Order Code" })<br />

						Order Date:<br/>
						<input type="date" name="PurchaseOrder.PurchaseDate" id="orderDate" class="form-control" /><br/>
						@*@Html.TextBoxFor(m => m.PurchaseOrder.PurchaseDate, new { @class = "form-control", id = "purchasedate" })*@

					</div>
					<div class="col-md-8">
						<div class="row">
							<div class="col-md-8">
								Notes:<br />
								@Html.TextAreaFor(m => m.PurchaseOrder.Remarks, new { @class = "form-control", id = "orderNotes", placeholder = "Enter Notes", rows = 5, style = "resize: none;" })<br />

								<div class="row">
									<div class="col-md-6">
										Payment Mode:<br />
										@Html.DropDownListFor(m => m.PurchaseOrder.PaymentMode, ViewBag.PaymentModes as SelectList, "Select Payment Mode", new { @class = "form-control", id = "paymentModes" })
									</div>
									<div class="col-md-6">
										Payment Status:<br />
										@Html.CheckBoxFor(m => m.PurchaseOrder.PaymentStatus)&nbsp;&nbsp;Paid
										@*<label class="fancy-checkbox element-left">
			@Html.CheckBoxFor(m => m.PurchaseOrder.PaymentStatus)
			<input type="checkbox" name="PurchaseOrder.PaymentStatus" id="paymentStatus">
			<span>Paid</span>
		</label>*@
										@*@Html.CheckBoxFor(m => m.PurchaseOrder.PaymentStatus, new { })*@
									</div>
								</div>
							</div>
							<div class="col-md-4">
								Discount:<br />
								@Html.TextBoxFor(m => m.PurchaseOrder.Discount, "{0:#.##}", new { @class = "form-control", id = "discount", placeholder = "Enter Discount" })<br />
								Grand Total:<br />
								@Html.TextBoxFor(m => m.PurchaseOrder.AmountPaid, "{0:#.##}", new { @class = "form-control", id = "grandTotal", placeholder = "Grand Total", @readonly = "readonly" })<br />
								<br />
								<input type="submit" value="Place Order" class="btn btn-primary btn-block" /><br />
								@Html.ActionLink("Cancel", "CancelPurchaseOrder", "PurchaseOrders", new { }, new { @class = "btn btn-danger btn-block"})
							</div>
						</div>
					</div>
				}
			</div>
			<br />
		</div>
	</div>
</div>

